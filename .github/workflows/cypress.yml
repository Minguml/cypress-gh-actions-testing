name: 🚀 Run Trading Platform Tests
on:
  # This allows manual triggering from GitHub UI
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to test'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
        - development
      test_suite:
        description: 'Which tests to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - trading-platform
        - login-only
        - buy-order-flow
      browser:
        description: 'Which browser to use'
        required: true
        default: 'chrome'
        type: choice
        options:
        - chrome
        - firefox
        - edge

jobs:
  cypress-tests:
    name: Run Trading Tests
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Get the code
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4
      
      # Step 2: Setup Node.js
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # Step 3: Install dependencies
      - name: 📦 Install Dependencies
        run: npm ci
      
      # Step 4: Run Cypress tests
      - name: 🧪 Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ github.event.inputs.browser }}
          spec: |
            ${{
              github.event.inputs.test_suite == 'all' && 'cypress/e2e/**/*.cy.js' ||
              github.event.inputs.test_suite == 'trading-platform' && 'cypress/e2e/trading-platform.cy.js' ||
              'cypress/e2e/**/*.cy.js'
            }}
          # Use grep to run specific tests within the file
          command: |
            ${{
              github.event.inputs.test_suite == 'login-only' && 'npx cypress run --browser ${{ github.event.inputs.browser }} --spec cypress/e2e/trading-platform.cy.js --grep "should visit pro-trading platform and login"' ||
              github.event.inputs.test_suite == 'buy-order-flow' && 'npx cypress run --browser ${{ github.event.inputs.browser }} --spec cypress/e2e/trading-platform.cy.js --grep "should click buy button"' ||
              ''
            }}
        env:
          # Set the base URL based on environment choice
          CYPRESS_BASE_URL: |
            ${{
              github.event.inputs.environment == 'production' && 'https://pro-trading.phs.vn' ||
              github.event.inputs.environment == 'staging' && 'https://uat-pro-trading.phs.vn' ||
              github.event.inputs.environment == 'development' && 'https://dev-pro-trading.phs.vn' ||
              'https://uat-pro-trading.phs.vn'
            }}
      
      # Step 5: Upload screenshots if tests fail
      - name: 📸 Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ github.event.inputs.browser }}-${{ github.event.inputs.environment }}
          path: cypress/screenshots
          retention-days: 7
      
      # Step 6: Upload videos
      - name: 🎥 Upload Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-${{ github.event.inputs.browser }}-${{ github.event.inputs.environment }}
          path: cypress/videos
          retention-days: 7

      # Step 7: Create summary report
      - name: 📊 Test Summary
        if: always()
        run: |
          echo "## 🧪 Trading Platform Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Suite:** ${{ github.event.inputs.test_suite }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Browser:** ${{ github.event.inputs.browser }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Target URL:** https://uat-pro-trading.phs.vn" >> $GITHUB_STEP_SUMMARY
